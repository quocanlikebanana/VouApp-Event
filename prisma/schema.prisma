// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // uncomment next line if you use Prisma <5.10
    // directUrl = env("DATABASE_URL_UNPOOLED")
}

enum EventStatus {
    PENDING
    APPROVED
    REJECTED
    STARTED
    ENDED
}

model Event {
    id          Int         @id @default(autoincrement())
    partnerId   Int
    partnerName String
    name        String
    description String?
    startDate   DateTime?
    endDate     DateTime?
    status      EventStatus

    UserJoinEvents      UserJoinEvent[]
    PuzzleSet_Of_Events PuzzleSet_Of_Event[]
    Game_Of_Events      Game_Of_Event[]
    Promotion_Of_Events Promotion_Of_Event[]
}

model UserJoinEvent {
    id            Int      @id @default(autoincrement())
    userId        Int
    userFirstName String
    userLastName  String
    userEmail     String
    userFacebook  String?
    joinDate      DateTime

    eventId Int
    Event   Event @relation(fields: [eventId], references: [id])

    UserJoinEvent_Has_Puzzles                UserJoinEvent_Has_PuzzleOfEvent[]
    UserJoinEvent_Exchange_PuzzleSetOfEvents UserJoinEvent_Exchange_PuzzleSetOfEvent[]
    UserJoinEvent_Join_GameOfEvent           UserJoinEvent_Join_GameOfEvent[]

    @@unique([userId, eventId])
}

model UserJoinEvent_Has_PuzzleOfEvent {
    id       Int @id @default(autoincrement())
    quantity Int

    userJoinEventId Int
    UserJoinEvent   UserJoinEvent @relation(fields: [userJoinEventId], references: [id])

    puzzleOfEventId Int
    Puzzle_Of_Event Puzzle_Of_Event @relation(fields: [puzzleOfEventId], references: [id])

    @@unique([userJoinEventId, puzzleOfEventId])
}

model UserJoinEvent_Exchange_PuzzleSetOfEvent {
    id           Int      @id @default(autoincrement())
    exchangeDate DateTime
    isWin        Boolean

    userJoinEventId Int
    UserJoinEvent   UserJoinEvent @relation(fields: [userJoinEventId], references: [id])

    promotionOfEventPrizePuzzleSetOfEventId Int
    PromotionOfEventPrizePuzzleSetOfEvent   PromotionOfEvent_Prize_PuzzleSetOfEvent @relation(fields: [promotionOfEventPrizePuzzleSetOfEventId], references: [id])
}

// Array of PuzzleSet, outside.
model Puzzle_Of_Event {
    id         Int    @id @default(autoincrement())
    puzzleId   Int
    puzzleName String

    puzzleSetOfEventId Int
    PuzzleSet_Of_Event PuzzleSet_Of_Event @relation(fields: [puzzleSetOfEventId], references: [id])

    UserJoinEvent_Has_PuzzleOfEvent UserJoinEvent_Has_PuzzleOfEvent[]

    @@unique([puzzleId, puzzleSetOfEventId])
}

model PuzzleSet_Of_Event {
    id            Int    @id @default(autoincrement())
    puzzleSetId   Int
    puzzleSetName String

    eventId Int
    Event   Event @relation(fields: [eventId], references: [id])

    Puzzle_Of_Events                       Puzzle_Of_Event[]
    PromotionOfEvent_For_PuzzleSetOfEvents PromotionOfEvent_Prize_PuzzleSetOfEvent[]

    @@unique([puzzleSetId, eventId])
}

model PromotionOfEvent_Prize_PuzzleSetOfEvent {
    id       Int @id @default(autoincrement())
    quantity Int

    puzzleSetOfEventId Int
    PuzzleSet_Of_Event PuzzleSet_Of_Event @relation(fields: [puzzleSetOfEventId], references: [id])

    promotionOfEventId                      Int
    Promotion_Of_Event                      Promotion_Of_Event                        @relation(fields: [promotionOfEventId], references: [id])
    UserJoinEvent_Exchange_PuzzleSetOfEvent UserJoinEvent_Exchange_PuzzleSetOfEvent[]

    @@unique([puzzleSetOfEventId, promotionOfEventId])
}

model Game_Of_Event {
    id              Int     @id @default(autoincrement())
    gameId          Int
    gameName        String
    gameDescription String?

    eventId Int
    Event   Event @relation(fields: [eventId], references: [id])

    Reward_Rule_GameOfEvents        Reward_RuleFor_GameOfEvent[]
    UserJoinEvent_Join_GameOfEvents UserJoinEvent_Join_GameOfEvent[]
}

model Promotion_Of_Event {
    id                   Int     @id @default(autoincrement())
    promotionId          Int
    promotionName        String
    promotionDescription String?
    quantity             Int

    eventId Int
    Event   Event @relation(fields: [eventId], references: [id])

    PromotionOfEvent_For_PuzzleSetOfEvents PromotionOfEvent_Prize_PuzzleSetOfEvent[]
}

enum Metric {
    TOP
    SCORE
}

enum RewardType {
    PROMOTION
    PUZZLE
}

model Reward_RuleFor_GameOfEvent {
    id        Int    @id @default(autoincrement())
    metric    Metric
    threshold Int

    gameOfEventId Int
    Game_Of_Event Game_Of_Event @relation(fields: [gameOfEventId], references: [id])

    rewardId Int
    Reward   Reward[]
}

model Reward {
    id                  Int        @id @default(autoincrement())
    promotionOrPuzzleId Int // Weak FK
    quantity            Int
    type                RewardType // Promotion or Puzzle

    rewardRuleForGameOfEventId Int
    Reward_RuleFor_GameOfEvent Reward_RuleFor_GameOfEvent? @relation(fields: [rewardRuleForGameOfEventId], references: [id])

    UserJoinEventJoinGameOfEvent_History UserJoinEventJoinGameOfEvent_History[]

    @@unique([promotionOrPuzzleId, type, quantity])
}

model UserJoinEvent_Join_GameOfEvent {
    id   Int @id @default(autoincrement())
    turn Int

    gameOfEventId Int
    Game_Of_Event Game_Of_Event @relation(fields: [gameOfEventId], references: [id])

    userJoinEventId Int
    UserJoinEvent   UserJoinEvent? @relation(fields: [userJoinEventId], references: [id])

    UserJoinEventJoinGameOfEvent_History UserJoinEventJoinGameOfEvent_History[]

    @@unique([gameOfEventId, userJoinEventId])
}

model UserJoinEventJoinGameOfEvent_History {
    id    Int      @id @default(autoincrement())
    score Int
    date  DateTime

    rewardId Int?
    Reward   Reward? @relation(fields: [rewardId], references: [id])

    userJoinEventJoinGameOfEventId Int
    UserJoinEvent_Join_GameOfEvent UserJoinEvent_Join_GameOfEvent @relation(fields: [userJoinEventJoinGameOfEventId], references: [id])

    @@unique([date, userJoinEventJoinGameOfEventId])
}
